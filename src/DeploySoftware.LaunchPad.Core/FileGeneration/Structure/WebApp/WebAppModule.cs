using Castle.Core.Logging;
using System;
using System.Collections.Generic;

namespace DeploySoftware.LaunchPad.Core.FileGeneration
{
    /// <summary>
    /// Represents a module generated by LaunchPad Framework that contains
    /// API/middleware/backend component, at least one web client component, and possible documentation component.
    /// </summary>    
    [Serializable]
    public partial class WebAppModule : LaunchPadGeneratedModule<WebAppModuleSettings>
    {

        public VisualStudioComponent WebApi { get; set; }

        public IDictionary<string,WebClientComponent> WebClients { get; set; }


        public WebAppModule() : base(NullLogger.Instance)
        {
            Settings = new WebAppModuleSettings();
            WebApi = new VisualStudioComponent(NullLogger.Instance);
            var comparer = StringComparer.OrdinalIgnoreCase;
            WebClients = new Dictionary<string, WebClientComponent>(comparer);
        }

        public WebAppModule(ILogger logger) : base(logger)
        {
            Settings = new WebAppModuleSettings();
            WebApi = new VisualStudioComponent(logger); 
            var comparer = StringComparer.OrdinalIgnoreCase;
            WebClients = new Dictionary<string, WebClientComponent>(comparer);
        }
    }
}
