using System;
using System.Collections.Generic;

namespace DeploySoftware.LaunchPad.Core.FileGeneration
{
    /// <summary>
    /// Represents a solution generated by LaunchPad Framework.
    /// </summary>
    [Serializable]
    public partial class LaunchPadGeneratedSolution : LaunchPadGeneratedObjectBase, ILaunchPadGeneratedSolution
    {

        public virtual CloudInfrastructure Infrastructure { get; set; }

        /// <summary>
        /// The date time the solution generation started
        /// </summary>
        public virtual DateTime GenerationStart { get; set; }

        /// <summary>
        /// The date time the solution generation ended, or null if not yet complete
        /// </summary>
        public virtual DateTime? GenerationEnd { get; set; }

        /// <summary>
        /// The timespan between the start of generation and end (assuming it has ended)
        /// </summary>
        public virtual TimeSpan? GenerationDuration { get; set; }

        /// <summary>
        /// Contains configuration information related to this object's solution
        /// </summary>
        public virtual LaunchPadGeneratedSolutionSettings Settings { get; set; }

        /// <summary>
        /// Returns a bool indicating if the solution is currently in a valid or invalid state.
        /// </summary>
        /// <returns>True if the solution is in a valid state, or false if it is contains missing or invalid elements.</returns>
        public virtual bool CheckValidity()
        {
            bool isValid = false;
            if (Settings != null 
                && !String.IsNullOrEmpty(Name) && !String.IsNullOrEmpty(Id) && !String.IsNullOrEmpty(ObjectTypeName)                 
            )
            {
                isValid = true;
            }
            return isValid;
        }

        public virtual TimeSpan? GetGenerationTime()
        {
            if(GenerationEnd.HasValue)
            {
                TimeSpan duration = GenerationEnd.Value - GenerationStart;
                return duration;
            }
            else
            {
                return null;
            }
        }

        public LaunchPadGeneratedSolution() : base()
        {
            Infrastructure = new CloudInfrastructure(); 
            Settings = new LaunchPadGeneratedSolutionSettings();
            GenerationStart = DateTime.UtcNow;
        }
    }
}
