// ***********************************************************************
// Assembly         : Deploy.LaunchPad.FileGeneration
// Author           : Nicholas Kellett
// Created          : 11-19-2023
//
// Last Modified By : Nicholas Kellett
// Last Modified On : 10-01-2023
// ***********************************************************************
// <copyright file="VisualStudioComponent.cs" company="Deploy Software Solutions, inc.">
//     2018-2023 Deploy Software Solutions, inc.
// </copyright>
// <summary></summary>
// ***********************************************************************
using Castle.Core.Logging;
using Deploy.LaunchPad.FileGeneration.Structure.WebApp;
using System;
using System.Collections.Generic;

namespace Deploy.LaunchPad.FileGeneration.Structure
{
    /// <summary>
    /// Represents a Visual Studio component generated by LaunchPad Framework.
    /// </summary>
    [Serializable]
    public partial class VisualStudioComponent
        : LaunchPadGeneratedComponent<VisualStudioBlueprintDefinitionSettings, VisualStudioBlueprintDefinitionInstructions>,
        IVisualStudioComponent
    {

        /// <summary>
        /// Contains a dictionary of Application Services belonging to this component, keyed by the application service name
        /// </summary>
        /// <value>The application services.</value>
        public virtual IDictionary<string, LaunchPadGeneratedApplicationService> ApplicationServices { get; set; }


        /// <summary>
        /// Contains a dictionary of Domain Entities belonging to this component, keyed by the domain entity name
        /// </summary>
        /// <value>The domain entities.</value>
        public virtual IDictionary<string, LaunchPadGeneratedDomainEntity> DomainEntities { get; set; }


        /// <summary>
        /// Contains a dictionary of Value Objects belonging to this component, keyed by the VO name
        /// </summary>
        /// <value>The value objects.</value>
        public virtual IDictionary<string, LaunchPadGeneratedValueObject> ValueObjects { get; set; }

        /// <summary>
        /// Describes the overall coding/environment infrastructure in which this element exists
        /// (ex which version of ABP framework, which cloud provider)
        /// </summary>
        /// <value>The software infrastructure.</value>
        public virtual ISoftwareInfrastructure SoftwareInfrastructure { get; set; }

        /// <summary>
        /// Gets or sets the cors.
        /// </summary>
        /// <value>The cors.</value>
        public virtual CorsSettings Cors { get; set; }

        /// <summary>
        /// Returns a bool indicating if the component is currently in a valid or invalid state.
        /// The dictionaries cannot be null and at least one has to have at least one element
        /// </summary>
        /// <returns>True if the component is in a valid state, or false if it is contains missing or invalid elements.</returns>
        public override bool CheckValidity()
        {
            bool isValid = false;
            if (BlueprintDefinition != null
                && ApplicationServices != null
                && DomainEntities != null
                && ValueObjects != null
                && (ApplicationServices.Count > 0 || DomainEntities.Count > 0 || ValueObjects.Count > 0)
            )
            {
                isValid = true;
            }
            return isValid;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VisualStudioComponent"/> class.
        /// </summary>
        public VisualStudioComponent() : base(NullLogger.Instance)
        {
            var comparer = StringComparer.OrdinalIgnoreCase;
            DomainEntities = new Dictionary<string, LaunchPadGeneratedDomainEntity>(comparer);
            ValueObjects = new Dictionary<string, LaunchPadGeneratedValueObject>(comparer);
            ApplicationServices = new Dictionary<string, LaunchPadGeneratedApplicationService>(comparer);
            Cors = new CorsSettings();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VisualStudioComponent"/> class.
        /// </summary>
        /// <param name="logger">The logger.</param>
        public VisualStudioComponent(ILogger logger) : base(logger)
        {
            var comparer = StringComparer.OrdinalIgnoreCase;
            DomainEntities = new Dictionary<string, LaunchPadGeneratedDomainEntity>(comparer);
            ValueObjects = new Dictionary<string, LaunchPadGeneratedValueObject>(comparer);
            ApplicationServices = new Dictionary<string, LaunchPadGeneratedApplicationService>(comparer);
            Cors = new CorsSettings();
        }
    }
}
