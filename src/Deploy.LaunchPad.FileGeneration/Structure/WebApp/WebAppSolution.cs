using Castle.Core.Logging;
using System;

namespace Deploy.LaunchPad.FileGeneration.Structure
{
    /// <summary>
    /// Represents a solution generated by LaunchPad Framework which may include API/middleware/backend, 
    /// documents, web client, and static html.
    /// </summary>
    [Serializable]
    public partial class WebAppSolution : LaunchPadGeneratedSolution, IWebAppSolution
    {

        /// <summary>
        /// The generated Visual Studio module that belongs to this solution.
        /// </summary>
        public virtual WebAppModule WebAppModule { get; set; }

        public virtual ISoftwareInfrastructure SoftwareInfrastructure { get; set; }

        /// <summary>
        /// Returns a bool indicating if the VS solution  is currently in a valid or invalid state.
        /// </summary>
        /// <returns>True if the VS Solution is in a valid state, or false if it is contains missing or invalid elements.</returns>
        public override bool CheckValidity()
        {
            bool isValid = false;
            if (Settings != null
                && (WebAppModule != null)
            )
            {
                isValid = true;
            }
            return isValid;
        }

        public WebAppSolution() : base()
        {
            WebAppModule = new WebAppModule(NullLogger.Instance);
        }
    }
}
