// ***********************************************************************
// Assembly         : Deploy.LaunchPad.FileGeneration
// Author           : Nicholas Kellett
// Created          : 11-19-2023
//
// Last Modified By : Nicholas Kellett
// Last Modified On : 01-08-2023
// ***********************************************************************
// <copyright file="WebAppSolution.cs" company="Deploy Software Solutions, inc.">
//     2018-2023 Deploy Software Solutions, inc.
// </copyright>
// <summary></summary>
// ***********************************************************************
using Castle.Core.Logging;
using System;

namespace Deploy.LaunchPad.FileGeneration.Structure
{
    /// <summary>
    /// Represents a solution generated by LaunchPad Framework which may include API/middleware/backend,
    /// documents, web client, and static html.
    /// </summary>
    [Serializable]
    public partial class WebAppSolution : LaunchPadGeneratedSolution, IWebAppSolution
    {

        /// <summary>
        /// The generated Visual Studio module that belongs to this solution.
        /// </summary>
        /// <value>The web application module.</value>
        public virtual WebAppModule WebAppModule { get; set; }

        /// <summary>
        /// Describes the overall infrastructure this solution is being generated/deployed into. May be null.
        /// </summary>
        /// <value>The software infrastructure.</value>
        public virtual ISoftwareInfrastructure SoftwareInfrastructure { get; set; }

        /// <summary>
        /// Returns a bool indicating if the VS solution  is currently in a valid or invalid state.
        /// </summary>
        /// <returns>True if the VS Solution is in a valid state, or false if it is contains missing or invalid elements.</returns>
        public override bool CheckValidity()
        {
            bool isValid = false;
            if (Settings != null
                && (WebAppModule != null)
            )
            {
                isValid = true;
            }
            return isValid;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WebAppSolution"/> class.
        /// </summary>
        public WebAppSolution() : base()
        {
            WebAppModule = new WebAppModule(NullLogger.Instance);
        }
    }
}
