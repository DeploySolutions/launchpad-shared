using Castle.Core.Logging;
using System;
using System.Collections.Generic;

namespace Deploy.LaunchPad.FileGeneration.Structure
{
    /// <summary>
    /// Represents a document set component generated by LaunchPad Framework.
    /// </summary>    
    [Serializable]
    public partial class DocumentSetComponent
        : LaunchPadGeneratedComponent<DocumentSetBlueprintDefinitionSettings, DocumentSetBlueprintDefinitionInstructions>
    {

        /// <summary>
        /// The list of folders that belong to this module.
        /// </summary>
        public virtual IDictionary<string, LaunchPadGeneratedFolder> Folders { get; set; }

        /// <summary>
        /// The list of documents that belong to this module.
        /// </summary>
        public virtual IDictionary<string, LaunchPadGeneratedDocument> Documents { get; set; }

        /// <summary>
        /// Returns a bool indicating if the document set component is currently in a valid or invalid state.
        /// </summary>
        /// <returns>True if the document set component is in a valid state, or false if it is contains missing or invalid elements.</returns>
        public override bool CheckValidity()
        {
            bool isValid = false;
            if (BlueprintDefinition != null
                && ((Folders != null && Folders.Count > 0) || (Documents != null && Documents.Count > 0))
                && (Documents.Count > 0 || Folders.Count > 0)
            )
            {
                isValid = true;
            }
            return isValid;
        }

        public DocumentSetComponent() : base(NullLogger.Instance)
        {
            var comparer = StringComparer.OrdinalIgnoreCase;
            Folders = new Dictionary<string, LaunchPadGeneratedFolder>(comparer);
            Documents = new Dictionary<string, LaunchPadGeneratedDocument>(comparer);
        }

        public DocumentSetComponent(ILogger logger) : base(logger)
        {
            var comparer = StringComparer.OrdinalIgnoreCase;
            Folders = new Dictionary<string, LaunchPadGeneratedFolder>(comparer);
            Documents = new Dictionary<string, LaunchPadGeneratedDocument>(comparer);
        }
    }
}
