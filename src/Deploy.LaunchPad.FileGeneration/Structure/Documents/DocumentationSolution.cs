// ***********************************************************************
// Assembly         : Deploy.LaunchPad.FileGeneration
// Author           : Nicholas Kellett
// Created          : 11-19-2023
//
// Last Modified By : Nicholas Kellett
// Last Modified On : 01-08-2023
// ***********************************************************************
// <copyright file="DocumentationSolution.cs" company="Deploy Software Solutions, inc.">
//     2018-2023 Deploy Software Solutions, inc.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using System.Collections.Generic;

namespace Deploy.LaunchPad.FileGeneration.Structure
{
    /// <summary>
    /// Represents a solution generated by LaunchPad Framework which only contains documents.
    /// </summary>
    [Serializable]
    public partial class DocumentationSolution : LaunchPadGeneratedSolution
    {
        /// <summary>
        /// The list of generated document set modules that belong to this solution.
        /// </summary>
        /// <value>The modules.</value>
        public virtual IDictionary<string, DocumentSetModule> Modules { get; set; }

        /// <summary>
        /// Returns a bool indicating if the solution is currently in a valid or invalid state.
        /// </summary>
        /// <returns>True if the solution is in a valid state, or false if it is contains missing or invalid elements.</returns>
        public override bool CheckValidity()
        {
            bool isValid = false;
            if (Settings != null && Modules != null && Modules.Count > 0)
            {
                isValid = true;
            }
            return isValid;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentationSolution"/> class.
        /// </summary>
        public DocumentationSolution() : base()
        {
            var comparer = StringComparer.OrdinalIgnoreCase;
            Modules = new Dictionary<string, DocumentSetModule>(comparer);
        }
    }
}
