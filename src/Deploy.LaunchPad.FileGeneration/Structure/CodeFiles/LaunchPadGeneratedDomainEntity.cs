// ***********************************************************************
// Assembly         : Deploy.LaunchPad.FileGeneration
// Author           : Nicholas Kellett
// Created          : 11-19-2023
//
// Last Modified By : Nicholas Kellett
// Last Modified On : 11-05-2023
// ***********************************************************************
// <copyright file="LaunchPadGeneratedDomainEntity.cs" company="Deploy Software Solutions, inc.">
//     2018-2023 Deploy Software Solutions, inc.
// </copyright>
// <summary></summary>
// ***********************************************************************
using Deploy.LaunchPad.Core.Domain.Model;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml.Serialization;

namespace Deploy.LaunchPad.FileGeneration.Structure
{
    /// <summary>
    /// Represents a domain entity class generated by LaunchPad Framework.
    /// </summary>
    [Serializable]
    public partial class LaunchPadGeneratedDomainEntity : LaunchPadGeneratedClassBase
    {
        /// <summary>
        /// Gets or sets the type of the domain entity.
        /// </summary>
        /// <value>The type of the domain entity.</value>
        public virtual DomainEntityType DomainEntityType { get; set; } = DomainEntityType.DomainEntity;

        /// <summary>
        /// Specify whether this domain entity supports multitenancy and if so which ABP tenancy interface type.
        /// </summary>
        /// <value>The type of the tenancy.</value>

        public virtual DomainEntityTenancyType TenancyType { get; set; } = DomainEntityTenancyType.IMustHaveTenant;


        /// <summary>
        /// Gets or sets a value indicating whether [i can raise domain events].
        /// </summary>
        /// <value><c>true</c> if [i can raise domain events]; otherwise, <c>false</c>.</value>
        public virtual bool ICanRaiseDomainEvents { get; set; } = false;



        /// <summary>
        /// Contains a collection of Data Transfer Objects belonging to this domain entity
        /// </summary>
        /// <value>The data transfer objects.</value>
        public virtual IDictionary<string, LaunchPadGeneratedDataTransferObject> DataTransferObjects { get; set; }

        /// <summary>
        /// Gets or sets the database context entity framework mapping statements.
        /// </summary>
        /// <value>The database context entity framework mapping statements.</value>
        public string DbContextEntityFrameworkMappingStatements { get; set; }= string.Empty;

        public DatabaseTable DatabaseTable { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="LaunchPadGeneratedDomainEntity"/> class.
        /// </summary>
        public LaunchPadGeneratedDomainEntity() : base()
        {
            var comparer = StringComparer.OrdinalIgnoreCase;
            DataTransferObjects = new Dictionary<string, LaunchPadGeneratedDataTransferObject>(comparer);
            DatabaseTable = new DatabaseTable();
        }
    }
}
