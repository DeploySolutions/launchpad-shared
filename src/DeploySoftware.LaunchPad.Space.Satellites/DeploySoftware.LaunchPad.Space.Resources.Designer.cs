//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeploySoftware.LaunchPad.Space.Satellites {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DeploySoftware_LaunchPad_Space_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DeploySoftware_LaunchPad_Space_Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DeploySoftware.LaunchPad.Space.Satellites.DeploySoftware.LaunchPad.Space.Resource" +
                            "s", typeof(DeploySoftware_LaunchPad_Space_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radarsat1 Corner coordinates cannot be null or empty.
        /// </summary>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_CornerCoordinates_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_CornerC" +
                        "oordinates_ArgumentNullExpection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radarsat1 Scene centre cannot be null or empty.
        /// </summary>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneCentre_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneCe" +
                        "ntre_ArgumentNullExpection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radarsat1 Scene Start Time cannot be null.
        /// </summary>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneStartTime_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneSt" +
                        "artTime_ArgumentNullExpection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radarsat1 Scene Stop Time cannot be null.
        /// </summary>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneStopTime_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneSt" +
                        "opTime_ArgumentNullExpection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (c) Canadian Space Agency 1997 Agence spatiale canadienne. Processed and distributed by MDA Geospatial Services Inc. Contains information licensed under the Open Government Licence – Canada..
        /// </summary>
        public static string Text_Radarsat1DataUsageRights_Attribution {
            get {
                return ResourceManager.GetString("Text_Radarsat1DataUsageRights_Attribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Her Majesty the Queen in right of Canada.
        /// </summary>
        public static string Text_Radarsat1DataUsageRights_Owner {
            get {
                return ResourceManager.GetString("Text_Radarsat1DataUsageRights_Owner", resourceCulture);
            }
        }
    }
}
