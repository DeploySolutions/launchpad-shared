// Initially generated by quicktype https://github.com/quicktype/quicktype under the Apache 2 license.
// 

namespace Deploy.LaunchPad.Core.STAC
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class StacBasics
    {
        /// <summary>
        /// Detailed multi-line description to fully explain the Item.
        /// </summary>
        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public virtual string Description { get; set; }

        /// <summary>
        /// A human-readable title describing the Item.
        /// </summary>
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public virtual string Title { get; set; }
    }

    public partial class StacBasics
    {
        public static StacBasics FromJson(string json) => JsonConvert.DeserializeObject<StacBasics>(json, Deploy.LaunchPad.Core.STAC.StacBasicsConverter.Settings);
    }

    public static class SerializeStacBasics
    {
        public static string ToJson(this StacBasics self) => JsonConvert.SerializeObject(self, Deploy.LaunchPad.Core.STAC.StacBasicsConverter.Settings);
    }

    internal static class StacBasicsConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
