// Initially generated by quicktype https://github.com/quicktype/quicktype under the Apache 2 license.
// 

namespace Deploy.LaunchPad.Core.STAC
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Deploy.LaunchPad.Core.Domain.Geography.STAC;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class StacCollection
    {
        [JsonProperty("providers", NullValueHandling = NullValueHandling.Ignore)]
        public virtual List<Provider> Providers { get; set; }
    }

    public partial class StacCollection
    {
        public static StacCollection FromJson(string json) => JsonConvert.DeserializeObject<StacCollection>(json, Deploy.LaunchPad.Core.STAC.StacCollectionConverter.Settings);
    }

    public static class SerializeStacCollection
    {
        public static string ToJson(this StacCollection self) => JsonConvert.SerializeObject(self, Deploy.LaunchPad.Core.STAC.StacCollectionConverter.Settings);
    }

    internal static class StacCollectionConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                OrganizationRoleConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

}
