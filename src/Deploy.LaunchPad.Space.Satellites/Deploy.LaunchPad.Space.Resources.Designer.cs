// ***********************************************************************
// Assembly         : Deploy.LaunchPad.Space.Satellites
// Author           : Nicholas Kellett
// Created          : 11-19-2023
//
// Last Modified By : Nicholas Kellett
// Last Modified On : 01-08-2023
// ***********************************************************************
// <copyright file="Deploy.LaunchPad.Space.Resources.Designer.cs" company="Deploy Software Solutions, inc.">
//     2018-2023 Deploy Software Solutions, inc.
// </copyright>
// <summary></summary>
// ***********************************************************************

namespace Deploy.LaunchPad.Space.Satellites {
    using System;


    /// <summary>
    /// A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Deploy_LaunchPad_Space_Resources {

        /// <summary>
        /// The resource man
        /// </summary>
        private static global::System.Resources.ResourceManager resourceMan;

        /// <summary>
        /// The resource culture
        /// </summary>
        private static global::System.Globalization.CultureInfo resourceCulture;

        /// <summary>
        /// Initializes a new instance of the <see cref="Deploy_LaunchPad_Space_Resources"/> class.
        /// </summary>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Deploy_LaunchPad_Space_Resources() {
        }

        /// <summary>
        /// Returns the cached ResourceManager instance used by this class.
        /// </summary>
        /// <value>The resource manager.</value>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Deploy.LaunchPad.Space.Satellites.Deploy.LaunchPad.Space.Resource" +
                            "s", typeof(Deploy_LaunchPad_Space_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        /// Overrides the current thread's CurrentUICulture property for all
        /// resource lookups using this strongly typed resource class.
        /// </summary>
        /// <value>The culture.</value>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Radarsat1 Corner coordinates cannot be null or empty.
        /// </summary>
        /// <value>The exception radarsat1 metadata parser get radarsat1 observation from metadata file corner coordinates argument null expection.</value>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_CornerCoordinates_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_CornerC" +
                        "oordinates_ArgumentNullExpection", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Radarsat1 Scene centre cannot be null or empty.
        /// </summary>
        /// <value>The exception radarsat1 metadata parser get radarsat1 observation from metadata file scene centre argument null expection.</value>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneCentre_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneCe" +
                        "ntre_ArgumentNullExpection", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Radarsat1 Scene Start Time cannot be null.
        /// </summary>
        /// <value>The exception radarsat1 metadata parser get radarsat1 observation from metadata file scene start time argument null expection.</value>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneStartTime_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneSt" +
                        "artTime_ArgumentNullExpection", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Radarsat1 Scene Stop Time cannot be null.
        /// </summary>
        /// <value>The exception radarsat1 metadata parser get radarsat1 observation from metadata file scene stop time argument null expection.</value>
        public static string Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneStopTime_ArgumentNullExpection {
            get {
                return ResourceManager.GetString("Exception_Radarsat1MetadataParser_GetRadarsat1ObservationFromMetadataFile_SceneSt" +
                        "opTime_ArgumentNullExpection", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to (c) Canadian Space Agency 1997 Agence spatiale canadienne. Processed and distributed by MDA Geospatial Services Inc. Contains information licensed under the Open Government Licence – Canada..
        /// </summary>
        /// <value>The text radarsat1 data usage rights attribution.</value>
        public static string Text_Radarsat1DataUsageRights_Attribution {
            get {
                return ResourceManager.GetString("Text_Radarsat1DataUsageRights_Attribution", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Her Majesty the Queen in right of Canada.
        /// </summary>
        /// <value>The text radarsat1 data usage rights owner.</value>
        public static string Text_Radarsat1DataUsageRights_Owner {
            get {
                return ResourceManager.GetString("Text_Radarsat1DataUsageRights_Owner", resourceCulture);
            }
        }
    }
}
